pipeline{
    agent any
    tools{
        maven 'apache-maven-3.5.3'
    }
    stages{
       
        stage('Compile'){
            steps{
                withMaven(maven: 'apache-maven-3.5.3'){
                    bat 'mvn clean compile'
                }
            }
        }
        stage('Test'){
            steps{
                withMaven(maven: 'apache-maven-3.5.3'){
                    bat 'mvn test'
                }
            }
        }
        
        stage('install'){
            steps{
                withMaven(maven: 'apache-maven-3.5.3'){
                    bat 'mvn install'
                }
            }
          }
          
         stage ('SonarQube Analysis'){
            steps{
                        withSonarQubeEnv('Sonar_Qube') {
                             bat 'mvn org.sonarsource.scanner.maven:sonar-maven-plugin:3.2:sonar -Dsonar.login=admin -Dsonar.password=admin'
                             }
                   }
          }
          
          stage ('Artifactory Deploy'){
            
                branch "master"
                    }
                steps{
               
                    script {
                        def server = Artifactory.server('helloDevOps_demo')
                        def rtMaven = Artifactory.newMavenBuild()
                        rtMaven.resolver server: server, releaseRepo: 'libs-release', snapshotRepo: 'libs-snapshot'
                        rtMaven.deployer server: server, releaseRepo: 'libs-release-local', snapshotRepo: 'libs-snapshot-local'
                        rtMaven.tool = 'maven 3'
                        def buildInfo = rtMaven.run pom: 'pom.xml', goals: 'install'
                        server.publishBuildInfo buildInfo
                        }
                   }
            
          
          
     
        }
}
